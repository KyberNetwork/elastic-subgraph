specVersion: 0.0.2
description: KyberSwap is DeFi’s first Dynamic Market Maker; a decentralized exchange protocol that provides frictionless crypto liquidity with extremely high flexibility and capital efficiency. KyberSwap is the first major protocol in Kyber’s liquidity hub.
repository: https://github.com/KyberNetwork/promm-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: rinkeby
    source:
      address: '0x0c7369f931a8d809e443c1d4a5dce663ff888a73'
      abi: Factory
      startBlock: 9983421
      # startBlock: 10194215
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Factory
          file: ./abis/ProMMFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Pool
          file: ./abis/pool.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint16,int24,address)
          handler: handlePoolCreated
  # - kind: ethereum/contract
  #   name: AntiSnipAttackPositionManager
  #   network: rinkeby
  #   source:
  #     address: '0x958935bc8dcb8b4b0adff4fceb2beb8bbb117cfc'
  #     abi: AntiSnipAttackPositionManager
  #     startBlock: 9983421
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/position-manager.ts
  #     entities:
  #       - Pool
  #       - Token
  #     abis:
  #       - name: AntiSnipAttackPositionManager
  #         file: ./abis/AntiSnipAttackPositionManager.json
  #       - name: Pool
  #         file: ./abis/pool.json
  #       - name: Factory
  #         file: ./abis/ProMMFactory.json
  #       - name: ERC20
  #         file: ./abis/ERC20.json
  #     eventHandlers:
  #       - event: IncreaseLiquidity(indexed uint256,uint128,uint256,uint256)
  #         handler: handleIncreaseLiquidity
  #       - event: DecreaseLiquidity(indexed uint256,uint128,uint256,uint256)
  #         handler: handleDecreaseLiquidity
  #       - event: Collect(indexed uint256,address,uint256,uint256)
  #         handler: handleCollect
  #       - event: Transfer(indexed address,indexed address,indexed uint256)
  #         handler: handleTransfer
templates:
  - kind: ethereum/contract
    name: Pool
    network: rinkeby
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/core.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/ProMMFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: Flash(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleFlash
