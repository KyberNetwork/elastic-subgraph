specVersion: 0.0.2
description: KyberSwap is DeFi’s first Dynamic Market Maker; a decentralized exchange protocol that provides frictionless crypto liquidity with extremely high flexibility and capital efficiency. KyberSwap is the first major protocol in Kyber’s liquidity hub.
repository: https://github.com/KyberNetwork/promm-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Factory
    network: ropsten
    source:
      address: '0x48f6d7dae56623dde5a0d56b283165cae1753d70'
      abi: Factory
      startBlock: 12250882
      # startBlock: 10194215
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Factory
          file: ./abis/ProMMFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: Pool
          file: ./abis/pool.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint16,int24,address)
          handler: handlePoolCreated
  - kind: ethereum/contract
    name: AntiSnipAttackPositionManager
    network: ropsten
    source:
      address: '0xb99ad0a400aff7ca5ed7d07410a81ed7fc8f7a0e'
      abi: AntiSnipAttackPositionManager
      startBlock: 12250882
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/position-manager.ts
      entities:
        - Pool
        - Token
      abis:
        - name: AntiSnipAttackPositionManager
          file: ./abis/AntiSnipAttackPositionManager.json
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/ProMMFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: MintPosition(indexed uint256,indexed uint80,uint128,uint256,uint256)
          handler: handleMintPosition
        - event: AddLiquidity(indexed uint256,uint128,uint256,uint256,uint256)
          handler: handleIncreaseLiquidity
        - event: RemoveLiquidity(indexed uint256,uint128,uint256,uint256,uint256)
          handler: handleDecreaseLiquidity
        # - event: Collect(indexed uint256,address,uint256,uint256)
        #   handler: handleCollect
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
  - kind: ethereum/contract
    name: KyberRewardLocker
    network: ropsten
    source:
      address: '0x7B2801f8ae591fd9F98a8CFbbBeDD0BE054279bc'
      abi: KyberRewardLocker
      startBlock: 12251001  # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/farm.ts
      entities:   # defines which entities are written to stores
        - RewardLockers
      abis:
        - name: KyberRewardLocker
          file: ./abis/KyberRewardLocker.json
        - name: KyberFairLaunch
          file: ./abis/KyberFairLaunch.json
      eventHandlers:
        - event: RewardContractAdded(indexed address,indexed address,bool)
          handler: handleRewardContractAdded
        # - event: Vested(indexed address,indexed address,uint256,uint256)
        #   handler: handleVestd
templates:
  - kind: ethereum/contract
    name: Pool
    network: ropsten
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/core.ts
      entities:
        - Pool
        - Token
      abis:
        - name: Pool
          file: ./abis/pool.json
        - name: Factory
          file: ./abis/ProMMFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Initialize(uint160,int24)
          handler: handleInitialize
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleSwap
        - event: Mint(address,indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleMint
        - event: Burn(indexed address,indexed int24,indexed int24,uint128,uint256,uint256)
          handler: handleBurn
        - event: BurnRTokens(indexed address,uint256,uint256,uint256)
          handler: handleBurnRTokens
        - event: Flash(indexed address,indexed address,uint256,uint256,uint256,uint256)
          handler: handleFlash

  - kind: ethereum/contract
    name: KyberFairLaunch
    network: ropsten
    source:
      abi: KyberFairLaunch
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/farm.ts
      entities:
        - Pool
        - Token
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: KyberFairLaunch
          file: ./abis/KyberFairLaunch.json
      eventHandlers:
        - event: AddPool(uint32,uint32,uint32,uint256)
          handler: handleAddPool
        - event: RenewPool(indexed uint256,uint32,uint32,uint32,uint256)
          handler: handleRenewPool
        # - event: Deposit(address,indexed uint256)
        #   handler: handleDeposit
        - event: Join(indexed uint256,indexed uint256,indexed uint256)
          handler: handleJoin
        - event: Exit(address,indexed uint256,indexed uint256,indexed uint256)
          handler: handleExit
        # - event: Harvest(indexed address,indexed uint256,indexed address,uint256,uint256)
        #   handler: handleHarvest
        # - event: Withdraw(indexed address,indexed uint256,indexed uint256,uint256)
        #   handler: handleWithdraw
        # - event: AddNewPool(indexed address,indexed uint32,indexed uint32,uint256[])
        #   handler: handleAddNewPool
